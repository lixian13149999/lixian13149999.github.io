(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{197:function(i,t,v){"use strict";v.r(t);var _=v(0),r=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var i=this,t=i.$createElement,v=i._self._c||t;return v("div",{staticClass:"content"},[v("p",[i._v("本教程示例代码:")]),i._v(" "),v("ul",[v("li",[i._v("GitHub: https://github.com/lixian13149999/spring-boot-learn")])]),i._v(" "),v("p",[i._v("欢迎若对你有所帮助, 欢迎 "),v("strong",[i._v("Star")]),i._v(" 以示鼓励.")]),i._v(" "),v("h2",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[i._v("#")]),i._v(" 前言")]),i._v(" "),v("ul",[v("li",[i._v("[x] 前言")])]),i._v(" "),v("h2",{attrs:{id:"简单入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单入门","aria-hidden":"true"}},[i._v("#")]),i._v(" 简单入门")]),i._v(" "),v("ul",[v("li",[i._v("[x] 第一个 SpringBoot 项目 HelloWorld")]),i._v(" "),v("li",[i._v("[x] SpringBoot Junit 单元测试")]),i._v(" "),v("li",[i._v("[x] SpringBoot 配置文件, 自定义配置参数, 多环境配置")])]),i._v(" "),v("h2",{attrs:{id:"进阶学习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进阶学习","aria-hidden":"true"}},[i._v("#")]),i._v(" 进阶学习")]),i._v(" "),v("ul",[v("li",[i._v("[x] SpringBoot 项目使用 Thymeleaf 模板引擎渲染 web 视图")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 项目使用 Freemarker 模板引擎渲染 web 视图")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 返回 Json 视图")]),i._v(" "),v("li",[i._v("[ ] SpringBoot web 请求, 多种传参方式 -- (代码完成)")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 统一返回值处理")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 统一异常处理")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 使用 LogBack 做简单日志记录")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 项目过滤器简单使用")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 使用过滤器, 记录请求日志")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 项目使用过滤器做简单权限拦截")]),i._v(" "),v("li",[i._v("[ ] 忽略项目的静态文件")]),i._v(" "),v("li",[i._v("[ ] 使用 ApplicationEvent & Listener 实现事件监听")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 使用 @Scheduled 实现定时器")])]),i._v(" "),v("h2",{attrs:{id:"工具-插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#工具-插件","aria-hidden":"true"}},[i._v("#")]),i._v(" 工具&插件")]),i._v(" "),v("ul",[v("li",[i._v("[x] Lombok 一个小巧却能有效提高编程效率的工具")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 结合 JavaMail 实现邮件发送")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 项目, 实现文件上传")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 加入 validator 校验机制")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 通过 CORS 实现跨域访问")]),i._v(" "),v("li",[i._v("[ ] IDEA 下实现 SpringBoot 项目热部署")])]),i._v(" "),v("h2",{attrs:{id:"数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库","aria-hidden":"true"}},[i._v("#")]),i._v(" 数据库")]),i._v(" "),v("ul",[v("li",[i._v("[ ] SpringBoot 整合 JPA")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 整合 mybatis")]),i._v(" "),v("li",[i._v("[ ] SpirngBoot 整合 Redis")]),i._v(" "),v("li",[i._v("[ ] SpringBoot 整合 mongodb")]),i._v(" "),v("li",[i._v("[ ] 多数据源配置 spring-boot-jpa")]),i._v(" "),v("li",[i._v("[ ] spring-boot-jpa 进阶学习")]),i._v(" "),v("li",[i._v("[ ] 使用 Druid 作为 SpringBoot 项目的数据源, 优化连接, 添加监控")]),i._v(" "),v("li",[i._v("[ ] 使用 MapStruct 实现自动映射 DTO")])]),i._v(" "),v("h2",{attrs:{id:"缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存","aria-hidden":"true"}},[i._v("#")]),i._v(" 缓存")]),i._v(" "),v("ul",[v("li",[i._v("[ ] 使用 EhCache 开启项目的缓存支持")]),i._v(" "),v("li",[i._v("[ ] 使用 redis 做集中式缓存")]),i._v(" "),v("li",[i._v("[ ] 构建高可用的 redis 分布式缓存")])]),i._v(" "),v("h2",{attrs:{id:"消息服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#消息服务","aria-hidden":"true"}},[i._v("#")]),i._v(" 消息服务")]),i._v(" "),v("h2",{attrs:{id:"安全管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安全管理","aria-hidden":"true"}},[i._v("#")]),i._v(" 安全管理")]),i._v(" "),v("ul",[v("li",[i._v("[ ] 使用 Apache Shiro")]),i._v(" "),v("li",[i._v("[ ] 使用 Spring Security")]),i._v(" "),v("li",[i._v("[ ] 使用 Spring Session")]),i._v(" "),v("li",[i._v("[ ] 使用 Spring Security 整合 OAuth2, 设计安全的 API 接口")])]),i._v(" "),v("h2",{attrs:{id:"项目构建及管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目构建及管理","aria-hidden":"true"}},[i._v("#")]),i._v(" 项目构建及管理")]),i._v(" "),v("ul",[v("li",[i._v("[ ] 使用 Maven 做多模块管理")]),i._v(" "),v("li",[i._v("[ ] Maven 多模块项目打包")]),i._v(" "),v("li",[i._v("[ ] 使用 Maven profile 实现打包的多环境配置")])])])}],!1,null,null,null);r.options.__file="建议阅读顺序.md";t.default=r.exports}}]);