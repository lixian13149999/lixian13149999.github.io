(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{191:function(a,t,s){"use strict";s.r(t);var r=s(0),e=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"第一章-课程介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一章-课程介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 第一章 课程介绍")]),a._v(" "),s("h2",{attrs:{id:"导学"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导学","aria-hidden":"true"}},[a._v("#")]),a._v(" 导学")]),a._v(" "),s("h3",{attrs:{id:"spring-springboot-springcloud-微服务-的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-springboot-springcloud-微服务-的关系","aria-hidden":"true"}},[a._v("#")]),a._v(" Spring, SpringBoot, SpringCloud, 微服务 的关系")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tNc79gy1fq1vezxsyej30u30gvjw3.jpg",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"技术储备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术储备","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术储备")]),a._v(" "),s("ul",[s("li",[a._v("SpringBoot 的基础知识数量账务")]),a._v(" "),s("li",[a._v("对 Linux 和 Docker 的基本用法数量掌握")])]),a._v(" "),s("h3",{attrs:{id:"课程重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#课程重点","aria-hidden":"true"}},[a._v("#")]),a._v(" 课程重点")]),a._v(" "),s("p",[a._v("SpringCloud 构建")]),a._v(" "),s("p",[a._v("微服务改造探讨")]),a._v(" "),s("h3",{attrs:{id:"主要内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 主要内容")]),a._v(" "),s("ul",[s("li",[a._v("Eureka(服务注册) 服务注册和发现, 高可用服务注册中心")]),a._v(" "),s("li",[a._v("Config(配置中心) 常规的 Server 和 Client 使用 Bus 结合RabbitMQ 实现自动刷新")]),a._v(" "),s("li",[a._v("Ribbon(服务通讯) RestTemplate Feign Ribbon通讯方式")]),a._v(" "),s("li",[a._v("Zuul(动态路由)")]),a._v(" "),s("li",[a._v("Hystrix 熔断机制")]),a._v(" "),s("li",[a._v("容器编排: Docker + Rancher")])]),a._v(" "),s("h1",{attrs:{id:"第二章-微服务介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章-微服务介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 第二章 微服务介绍")]),a._v(" "),s("h2",{attrs:{id:"微服务和其他常见架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务和其他常见架构","aria-hidden":"true"}},[a._v("#")]),a._v(" 微服务和其他常见架构")]),a._v(" "),s("h3",{attrs:{id:"微服务的提出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务的提出","aria-hidden":"true"}},[a._v("#")]),a._v(" 微服务的提出")]),a._v(" "),s("p",[a._v("James Lewis & Martin Fowler 2014 年提出")]),a._v(" "),s("h4",{attrs:{id:"微服务介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 微服务介绍")]),a._v(" "),s("p",[s("strong",[a._v("微服务是一种架构风格")])]),a._v(" "),s("h4",{attrs:{id:"微服务的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务的特点","aria-hidden":"true"}},[a._v("#")]),a._v(" 微服务的特点")]),a._v(" "),s("ul",[s("li",[a._v("一系列微小的服务共同组成")]),a._v(" "),s("li",[a._v("跑在自己的进程里")]),a._v(" "),s("li",[a._v("每个服务为独立的业务开发")]),a._v(" "),s("li",[a._v("独立部署")]),a._v(" "),s("li",[a._v("分布式的管理")])]),a._v(" "),s("h3",{attrs:{id:"服务技术的演进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务技术的演进","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务技术的演进")]),a._v(" "),s("p",[a._v("单一应用架构(ORM) -> 垂直应用架构(MVC) -> 分布式服务架构(RPC) -> 流动计算架构(SOA)")]),a._v(" "),s("h4",{attrs:{id:"单体架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单体架构","aria-hidden":"true"}},[a._v("#")]),a._v(" 单体架构")]),a._v(" "),s("p",[s("strong",[a._v("优点")])]),a._v(" "),s("ol",[s("li",[a._v("容易测试")]),a._v(" "),s("li",[a._v("容易部署")])]),a._v(" "),s("p",[s("strong",[a._v("缺点")])]),a._v(" "),s("ol",[s("li",[a._v("开发效率低")]),a._v(" "),s("li",[a._v("代码维护困难")]),a._v(" "),s("li",[a._v("部署不灵活(构建时间长)")]),a._v(" "),s("li",[a._v("稳定性不高")]),a._v(" "),s("li",[a._v("扩展性不够(高并发和)")])]),a._v(" "),s("h4",{attrs:{id:"分布式架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式架构","aria-hidden":"true"}},[a._v("#")]),a._v(" 分布式架构")]),a._v(" "),s("p",[a._v("旨在支持应用程序和服务的开发, 可以利用物理架构, 由多个"),s("strong",[a._v("自治的处理元素")]),a._v(", 不共享主内存, 但"),s("strong",[a._v("通过网络发送消息")]),a._v("合作.")]),a._v(" "),s("p",[a._v("— Leslie Lamport")]),a._v(" "),s("h2",{attrs:{id:"从一个极简的微服务框架开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从一个极简的微服务框架开始","aria-hidden":"true"}},[a._v("#")]),a._v(" 从一个极简的微服务框架开始")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tNc79gy1fq1wbaxyw4j30pw0h9guf.jpg",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"微服务架构的基础框架-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务架构的基础框架-组件","aria-hidden":"true"}},[a._v("#")]),a._v(" 微服务架构的基础框架/组件")]),a._v(" "),s("ul",[s("li",[a._v("服务注册发现")]),a._v(" "),s("li",[a._v("服务网关")]),a._v(" "),s("li",[a._v("后端通用服务")]),a._v(" "),s("li",[a._v("前端服务")])]),a._v(" "),s("h4",{attrs:{id:"我服务的实现方式-两大配方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我服务的实现方式-两大配方","aria-hidden":"true"}},[a._v("#")]),a._v(" 我服务的实现方式(两大配方)")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tNc79gy1fq1wvp7bwvj30vv0gpq60.jpg",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"springcloud-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-是什么","aria-hidden":"true"}},[a._v("#")]),a._v(" SpringCloud 是什么?")]),a._v(" "),s("p",[a._v("SpringCloud 是一个开发工具, 含了多个子项目,")]),a._v(" "),s("p",[a._v("-利用SpringBoot的开发便利")]),a._v(" "),s("p",[a._v("-主要是基于对Netflix开源组件的进一步封装(Netflix是微服务界的翘楚)")]),a._v(" "),s("h4",{attrs:{id:"springcloud-的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" SpringCloud 的作用")]),a._v(" "),s("p",[a._v("简化了分布式服务开发, 极大的降低了微服务开发的门槛")]),a._v(" "),s("h1",{attrs:{id:"第三章-eureka"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-eureka","aria-hidden":"true"}},[a._v("#")]),a._v(" 第三章 Eureka")]),a._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),s("ul",[s("li",[a._v("基于 Netflix Eureka 做了二次封装,")]),a._v(" "),s("li",[a._v("由两个组件组成\n"),s("ul",[s("li",[a._v("Eureka Server  注册中心")]),a._v(" "),s("li",[a._v("Eureka Client  注册服务")])])])]),a._v(" "),s("h2",{attrs:{id:"注册中心-eureka-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册中心-eureka-server","aria-hidden":"true"}},[a._v("#")]),a._v(" 注册中心 Eureka Server")]),a._v(" "),s("h3",{attrs:{id:"springcloud-和-springboot-对应的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-和-springboot-对应的关系","aria-hidden":"true"}},[a._v("#")]),a._v(" SpringCloud 和 SpringBoot 对应的关系")]),a._v(" "),s("p",[a._v("https://spring.io/projects —> SpringCloud —> 最下面的对应表格")]),a._v(" "),s("h4",{attrs:{id:"开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发","aria-hidden":"true"}},[a._v("#")]),a._v(" 开发")]),a._v(" "),s("ol",[s("li",[a._v("引入相应的 jar 包")]),a._v(" "),s("li",[a._v("在启动类上添加 "),s("code",[a._v("@EnableEurekaServer")]),a._v(" 表示这是一个注册中心服务的项目, 同时此注解也包含 "),s("code",[a._v("Client")]),a._v(" 注解, 所以添加了 "),s("code",[a._v("@EnableEurekaServer")]),a._v(" 后, 即表示当前项目即时 Server 又是 Client")])]),a._v(" "),s("h2",{attrs:{id:"eureka-client"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eureka-client","aria-hidden":"true"}},[a._v("#")]),a._v(" Eureka Client")]),a._v(" "),s("p",[s("strong",[a._v("开发")])]),a._v(" "),s("ol",[s("li",[a._v("选择相应的 jar 包")]),a._v(" "),s("li",[a._v("在启动类上添加 "),s("code",[a._v("@EnableDiscoveryClient")]),a._v(" 注解")]),a._v(" "),s("li",[a._v("配置注册的地址")])]),a._v(" "),s("h3",{attrs:{id:"实现-eureka-的高可用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-eureka-的高可用","aria-hidden":"true"}},[a._v("#")]),a._v(" 实现 Eureka 的高可用")]),a._v(" "),s("p",[a._v("新开启一个或多个 Eureka 服务, 使其互相注册")]),a._v(" "),s("p",[a._v("这时, 如果我们把 client 注册在其中一个 server 上时, client 会注册在其相互注册的其他 server 中. 当 client 重启后, 其他未被注册的 server 便不能再次被注册.")]),a._v(" "),s("h2",{attrs:{id:"服务注册中心的原理和地位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务注册中心的原理和地位","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务注册中心的原理和地位")]),a._v(" "),s("p",[a._v("在分布式系统中, 服务注册中心是最重要的基础部分")]),a._v(" "),s("h3",{attrs:{id:"客户端发现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端发现","aria-hidden":"true"}},[a._v("#")]),a._v(" 客户端发现")]),a._v(" "),s("p",[s("strong",[a._v("定义")])]),a._v(" "),s("p",[a._v("当客户端 A 需要服务 B 的服务时, 回去注册中心调用, 注册中心会吧所有 B 的地址告诉 A, 由 A 去选择调用那个 B")]),a._v(" "),s("p",[s("strong",[a._v("优点")])]),a._v(" "),s("p",[a._v("可控性强, 对服务 B 的控制度高")]),a._v(" "),s("p",[s("strong",[a._v("缺点")])]),a._v(" "),s("p",[a._v("需要自己实现逻辑去挑选 B")]),a._v(" "),s("p",[s("strong",[a._v("代表")])]),a._v(" "),s("p",[a._v("Eureka")]),a._v(" "),s("h3",{attrs:{id:"服务端发现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端发现","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务端发现")]),a._v(" "),s("p",[s("strong",[a._v("定义")])]),a._v(" "),s("p",[a._v("由代理在众多可用的 B 里边挑选出一个, 让 A 去使用,")]),a._v(" "),s("p",[s("strong",[a._v("优点")])]),a._v(" "),s("p",[a._v("不需要调用者 A 实现调用逻辑, 同时由于代理的接入, 服务提供者和注册中心对 A 是透明不可见的.")]),a._v(" "),s("p",[s("strong",[a._v("代表")])]),a._v(" "),s("p",[a._v("Nginx")]),a._v(" "),s("p",[a._v("Zookeeper")]),a._v(" "),s("p",[a._v("Kubernetes")]),a._v(" "),s("h2",{attrs:{id:"异构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异构","aria-hidden":"true"}},[a._v("#")]),a._v(" 异构")]),a._v(" "),s("p",[a._v("可以使用不同的语言不同的数据库来构建整体服务, 从这一点上, 就能比较好的理解, 为什么 SpringCloud 的调用方式选择 Http 的 restfull 接口的形式调用, 而不是像 dubbo 那样选择 RPC 的调用方式.")]),a._v(" "),s("p",[a._v("由于 rest 调用的客户端实现比较简单, 其他语言实现相关的调用也很方便")]),a._v(" "),s("h1",{attrs:{id:"第四章-服务拆分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章-服务拆分","aria-hidden":"true"}},[a._v("#")]),a._v(" 第四章 服务拆分")]),a._v(" "),s("h2",{attrs:{id:"业务拆分的起点和终点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#业务拆分的起点和终点","aria-hidden":"true"}},[a._v("#")]),a._v(" 业务拆分的起点和终点")]),a._v(" "),s("h3",{attrs:{id:"业务形态不适合做微服的项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#业务形态不适合做微服的项目","aria-hidden":"true"}},[a._v("#")]),a._v(" 业务形态不适合做微服的项目")]),a._v(" "),s("ul",[s("li",[a._v("系统中包含很多强事物场景")]),a._v(" "),s("li",[a._v("业务相对稳定, 迭代周期长")]),a._v(" "),s("li",[a._v("访问压力不大, 可用性不高")])]),a._v(" "),s("h2",{attrs:{id:"康威定律和微服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#康威定律和微服务","aria-hidden":"true"}},[a._v("#")]),a._v(" 康威定律和微服务")]),a._v(" "),s("p",[a._v("任何组织在设计一套系统(广义概念上的系统)时, 所交付的设计方案在结构上都与该组织的沟通结构保持一致.")]),a._v(" "),s("blockquote",[s("p",[a._v("沟通的问题, 会影响系统的设计")]),a._v(" "),s("p",[a._v("业务架构, 总是和团队内部的组织架构相匹配")])]),a._v(" "),s("h2",{attrs:{id:"点餐业务的服务拆分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点餐业务的服务拆分","aria-hidden":"true"}},[a._v("#")]),a._v(" 点餐业务的服务拆分")]),a._v(" "),s("h3",{attrs:{id:"服务的拆分方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务的拆分方式","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务的拆分方式")]),a._v(" "),s("ol",[s("li",[a._v("根据技术栈拆分")]),a._v(" "),s("li",[a._v("根据业务拆分")])]),a._v(" "),s("h4",{attrs:{id:"拆分时需要考虑的因素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拆分时需要考虑的因素","aria-hidden":"true"}},[a._v("#")]),a._v(" 拆分时需要考虑的因素")]),a._v(" "),s("ul",[s("li",[a._v("起点: 现有业务的情况, 现有项目的结构, 业务的发展预期")]),a._v(" "),s("li",[a._v("团队结构: 团队人员质量, 团队人数")]),a._v(" "),s("li",[a._v("沟通方式: 沟通效率和流畅度")])]),a._v(" "),s("h3",{attrs:{id:"服务拆分方法论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务拆分方法论","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务拆分方法论")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws4.sinaimg.cn/large/006tNc79gy1fq244yxb7kj30s10fjgpt.jpg",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"如何拆分功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何拆分功能","aria-hidden":"true"}},[a._v("#")]),a._v(" 如何拆分功能")]),a._v(" "),s("ul",[s("li",[a._v("单一职责, 松耦合, 高内聚")]),a._v(" "),s("li",[a._v("关注点分离\n"),s("ul",[s("li",[a._v("按职责 (容易拆分的业务)")]),a._v(" "),s("li",[a._v("按通用性 (基础组件)")]),a._v(" "),s("li",[a._v("按粒度级别")])])])]),a._v(" "),s("h4",{attrs:{id:"服务和数据的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务和数据的关系","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务和数据的关系")]),a._v(" "),s("ul",[s("li",[a._v("优先考虑业务功能, 再考虑数据")]),a._v(" "),s("li",[a._v("无状态服务  (状态: 如果一个数据需要被多个服务共享才能完成一个请求, 则此数据被称为状态, 进而依赖这个状态的服务称为有状态服务, 反之称为无状态服务)")]),a._v(" "),s("li",[a._v("拆分之前, 要把有状态的业务服务, 改为无状态的业务服务")])]),a._v(" "),s("h2",{attrs:{id:"商品服务业务编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#商品服务业务编码","aria-hidden":"true"}},[a._v("#")]),a._v(" 商品服务业务编码")]),a._v(" "),s("h3",{attrs:{id:"技术点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术点","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术点")]),a._v(" "),s("p",[a._v("lombok 工具插件的使用")]),a._v(" "),s("p",[a._v("ProductController 中 lambda 表达式封装集合的方法")]),a._v(" "),s("p",[a._v("Junit 测试类, 继承方式的使用")]),a._v(" "),s("p",[a._v("springdata jpa in 语句查询")]),a._v(" "),s("h2",{attrs:{id:"订单服务编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#订单服务编码","aria-hidden":"true"}},[a._v("#")]),a._v(" 订单服务编码")]),a._v(" "),s("h3",{attrs:{id:"技术点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术点-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 技术点")]),a._v(" "),s("p",[s("code",[a._v("OrderForm2OrderDTOConverter")]),a._v("  中使用 gson 进行对象的转换")]),a._v(" "),s("p",[a._v("在预期可能出错的地方需要些 try catch , 此时需要抛出异常, 并记录日志")]),a._v(" "),s("h3",{attrs:{id:"拆数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拆数据","aria-hidden":"true"}},[a._v("#")]),a._v(" 拆数据")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tNbRwgy1fq28tt6lwuj30r10fyjuu.jpg",alt:""}})]),a._v(" "),s("h1",{attrs:{id:"第五章-应用通讯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章-应用通讯","aria-hidden":"true"}},[a._v("#")]),a._v(" 第五章 应用通讯")]),a._v(" "),s("h2",{attrs:{id:"http-vs-rpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-vs-rpc","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP vs RPC")]),a._v(" "),s("p",[a._v("应用间的通讯, 当前有两种方式 "),s("code",[a._v("http")]),a._v("  和 "),s("code",[a._v("rpc")]),a._v(" 其代表分别为 "),s("code",[a._v("SpringCloud")]),a._v(" 和 "),s("code",[a._v("dubbo")])]),a._v(" "),s("p",[s("strong",[a._v("dubbo 的优势")]),a._v(": 服务治理集成上非常完善, 提供了服务注册发现, 负载均衡, 路由, 还设计了面向测试开发的 moke 泛化调用的机制. 提供服务治理和监控的可视化平台.")]),a._v(" "),s("p",[s("strong",[a._v("SpringCloud 的优势")]),a._v(": 使用 http restfull 交互, 本身轻量易用,适用性强, 跨语言, 跨平台")]),a._v(" "),s("p",[s("strong",[a._v("Dubbo 和 SpringCloud 服务对比")]),a._v(":")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th"),a._v(" "),s("th",[a._v("Dubbo")]),a._v(" "),s("th",[a._v("Spring Cloud")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("服务注册中心")]),a._v(" "),s("td",[a._v("Zookeeper")]),a._v(" "),s("td",[a._v("Spring Cloud Netflix Eureka")])]),a._v(" "),s("tr",[s("td",[a._v("服务调用方式")]),a._v(" "),s("td",[a._v("RPC")]),a._v(" "),s("td",[a._v("REST API")])]),a._v(" "),s("tr",[s("td",[a._v("服务网关")]),a._v(" "),s("td",[a._v("无")]),a._v(" "),s("td",[a._v("Spring Cloud Netflix Zuul")])]),a._v(" "),s("tr",[s("td",[a._v("断路器")]),a._v(" "),s("td",[a._v("不完善")]),a._v(" "),s("td",[a._v("Spring Cloud Netflix Hystrix")])]),a._v(" "),s("tr",[s("td",[a._v("分布式配置")]),a._v(" "),s("td",[a._v("无")]),a._v(" "),s("td",[a._v("Spring Cloud Config")])]),a._v(" "),s("tr",[s("td",[a._v("服务跟踪")]),a._v(" "),s("td",[a._v("无")]),a._v(" "),s("td",[a._v("Spring Cloud Sleuth")])]),a._v(" "),s("tr",[s("td",[a._v("消息总线")]),a._v(" "),s("td",[a._v("无")]),a._v(" "),s("td",[a._v("Spring Cloud Bus")])]),a._v(" "),s("tr",[s("td",[a._v("数据流")]),a._v(" "),s("td",[a._v("无")]),a._v(" "),s("td",[a._v("Spring Cloud Stream")])]),a._v(" "),s("tr",[s("td",[a._v("批量任务")]),a._v(" "),s("td",[a._v("无")]),a._v(" "),s("td",[a._v("Spring Cloud Task")])]),a._v(" "),s("tr",[s("td",[a._v("……")]),a._v(" "),s("td",[a._v("……")]),a._v(" "),s("td",[a._v("……")])])])]),a._v(" "),s("h2",{attrs:{id:"resttemplate-的三种调用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resttemplate-的三种调用方式","aria-hidden":"true"}},[a._v("#")]),a._v(" RestTemplate 的三种调用方式")]),a._v(" "),s("p",[a._v("直接通过路径发起请求: 指定 ip 和端口号以及请求路径.")]),a._v(" "),s("p",[a._v("详情请见 order Controller 中的 ClientController")]),a._v(" "),s("h2",{attrs:{id:"负债均衡器-ribbon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负债均衡器-ribbon","aria-hidden":"true"}},[a._v("#")]),a._v(" 负债均衡器 Ribbon")]),a._v(" "),s("p",[a._v("RestTemplate, Feign, Zuul 都使用了 Ribbon 的负载均衡")]),a._v(" "),s("h3",{attrs:{id:"ribbon-实现负载均衡的核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ribbon-实现负载均衡的核心","aria-hidden":"true"}},[a._v("#")]),a._v(" Ribbon 实现负载均衡的核心")]),a._v(" "),s("ul",[s("li",[a._v("服务发现:  依据服务的名字, 把该服务下所有的事例均找出来")]),a._v(" "),s("li",[a._v("服务选择规则:  如何选择")]),a._v(" "),s("li",[a._v("服务监听: 检测失效的服务")])]),a._v(" "),s("h3",{attrs:{id:"主要组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要组件","aria-hidden":"true"}},[a._v("#")]),a._v(" 主要组件")]),a._v(" "),s("p",[a._v("ServerList")]),a._v(" "),s("p",[a._v("IRule")]),a._v(" "),s("p",[a._v("ServerListFilter")]),a._v(" "),s("p",[a._v("通过 ServerList 获取所有的可用列表 通过 ServerListFilter 过滤掉一部分地址,  通过 IRule选择一个实例, 作为最终实例结果")]),a._v(" "),s("h3",{attrs:{id:"ribbon-选择服务的规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ribbon-选择服务的规则","aria-hidden":"true"}},[a._v("#")]),a._v(" Ribbon 选择服务的规则")]),a._v(" "),s("p",[a._v("默认获取服务的规则是轮询, 可以在客户端通过配置改变相应的规则")]),a._v(" "),s("div",{staticClass:"language-yml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 修改获取服务的方式, 默认是轮询\n# 服务的名称(可自己定义)\nPRODUCT:\n  # ribbon 获取服务\n  ribbon:\n    # 获取富的方式的类\n    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h2",{attrs:{id:"feign-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feign-的使用","aria-hidden":"true"}},[a._v("#")]),a._v(" Feign 的使用")]),a._v(" "),s("ul",[s("li",[a._v("调用方添加依赖")]),a._v(" "),s("li",[a._v("调用方启动主类上添加注解 "),s("code",[a._v("EnableFeignClients")])]),a._v(" "),s("li",[a._v("定义好需要调用的接口")])]),a._v(" "),s("h3",{attrs:{id:"feign-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feign-介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" Feign 介绍")]),a._v(" "),s("ul",[s("li",[a._v("声明式 REST 客户端 (伪 RPC)")]),a._v(" "),s("li",[a._v("采用了基于接口的注解")]),a._v(" "),s("li",[a._v("内部也使用了 Ribbon 做负载均衡")])]),a._v(" "),s("p",[a._v("使用时的注意点:")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("路径, 一定要是完整的全路径")])]),a._v(" "),s("li",[s("p",[a._v("当传递参数时使用了 @RequestBody 注解, 则需要使用 POST 请求")]),a._v(" "),s("blockquote",[s("p",[a._v("无参,  @RequestParam 传递单个参数, @PathVariable 路径的方式传递参数时, 才可以使用 Get 请求")])])])]),a._v(" "),s("h3",{attrs:{id:"项目改造成多模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目改造成多模块","aria-hidden":"true"}},[a._v("#")]),a._v(" 项目改造成多模块")]),a._v(" "),s("p",[a._v("多模块的推荐课程 : Spring Boot 2.0 深度实践-初遇Spring Boot —— 小马哥")]),a._v(" "),s("h2",{attrs:{id:"同步-or-异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步-or-异步","aria-hidden":"true"}},[a._v("#")]),a._v(" 同步 or 异步")]),a._v(" "),s("h3",{attrs:{id:"消息中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息中间件","aria-hidden":"true"}},[a._v("#")]),a._v(" 消息中间件")]),a._v(" "),s("p",[a._v("消息中间件推荐课程: Java 消息中间件")]),a._v(" "),s("h1",{attrs:{id:"第六章-统一配置中心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六章-统一配置中心","aria-hidden":"true"}},[a._v("#")]),a._v(" 第六章 统一配置中心")]),a._v(" "),s("h2",{attrs:{id:"配置中心概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置中心概述","aria-hidden":"true"}},[a._v("#")]),a._v(" 配置中心概述")]),a._v(" "),s("h3",{attrs:{id:"为什么需要统一配置中心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要统一配置中心","aria-hidden":"true"}},[a._v("#")]),a._v(" 为什么需要统一配置中心?")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws2.sinaimg.cn/large/006tNc79gy1fq6952h6swj31aa0xk0zp.jpg",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"实现的架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现的架构","aria-hidden":"true"}},[a._v("#")]),a._v(" 实现的架构")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws4.sinaimg.cn/large/006tNc79gy1fq6972bhr2j31ia0wsaij.jpg",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"编码-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码-测试","aria-hidden":"true"}},[a._v("#")]),a._v(" 编码 & 测试")]),a._v(" "),s("h3",{attrs:{id:"server-端开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-端开发","aria-hidden":"true"}},[a._v("#")]),a._v(" Server 端开发")]),a._v(" "),s("ul",[s("li",[a._v("创建 "),s("code",[a._v("SpringBoot")]),a._v(" 项目\n"),s("ul",[s("li",[a._v("添加 "),s("code",[a._v("eureka")]),a._v(" 客户端相关 "),s("code",[a._v("jar")]),a._v(" 包: 作为 "),s("code",[a._v("SpringCloud")]),a._v(" 项目的一个服务项目")]),a._v(" "),s("li",[a._v("添加 "),s("code",[a._v("config server")]),a._v(" 相关 "),s("code",[a._v("jar")]),a._v(" 包: 是 "),s("code",[a._v("SpringCloud")]),a._v(" 的 "),s("code",[a._v("config")]),a._v("  服务端")]),a._v(" "),s("li",[a._v("在启动类上添加  "),s("code",[a._v("@EnableConfigServer")]),a._v(" 注解: 标明当前项目是 "),s("code",[a._v("Config")]),a._v(" 的 "),s("code",[a._v("Server")]),a._v(" 项目")]),a._v(" "),s("li",[a._v("在 "),s("code",[a._v("yml")]),a._v(" 文件中配置注册中心, 配置 "),s("code",[a._v("config")]),a._v(" 文件的 "),s("code",[a._v("git")]),a._v(" 厂库地址( 注: http路径, 并非 "),s("code",[a._v("git clone")]),a._v(" 地址)")])])]),a._v(" "),s("li",[a._v("维护配置文件\n"),s("ul",[s("li",[a._v("创建配置文件项目: 项目中写入所需的配置文件")])])]),a._v(" "),s("li",[a._v("测试方式\n"),s("ul",[s("li",[a._v("直接请求 "),s("code",[a._v("Config Server")]),a._v(" 的 "),s("code",[a._v("服务地址[:端口] 相关的配置文件的全称")]),a._v(", 若能看到配置文件的内容, 说明测试成功")]),a._v(" "),s("li",[a._v("请求路径解释: "),s("code",[a._v("/{label}/{name}-{profiles}.yml")]),a._v(" "),s("ul",[s("li",[a._v("name: 文件的名称")]),a._v(" "),s("li",[a._v("profiles: 环境")]),a._v(" "),s("li",[a._v("label: 分支")])])]),a._v(" "),s("li",[a._v("注意: 文件名称的结构是 "),s("code",[a._v("文件名-profiles.yml/json/properties")]),a._v(" 格式可以自动转换")])])])]),a._v(" "),s("h3",{attrs:{id:"client-端开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#client-端开发","aria-hidden":"true"}},[a._v("#")]),a._v(" Client 端开发")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("引入注解")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-config-client"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("在 "),s("code",[a._v(".yml")]),a._v(" 文件中添加相应的配置信息.")])]),a._v(" "),s("li",[s("p",[a._v("修改 "),s("code",[a._v("application.yml")]),a._v(" 为 "),s("code",[a._v("bootstrap.yml")]),a._v(" .")])]),a._v(" "),s("li",[s("p",[a._v("注意:")]),a._v(" "),s("ul",[s("li",[a._v("统一注册中心等前置配置, 需要写在本地")]),a._v(" "),s("li",[a._v("客户端在加载时如果想要获取的是 "),s("code",[a._v("{name}-{profiles}.yml")]),a._v("  服务器在返回数据的时候会联同 "),s("code",[a._v("{name}.yml")]),a._v(" 文件一同返回,")])])])]),a._v(" "),s("h2",{attrs:{id:"springcloud-bus-自动更新配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-bus-自动更新配置","aria-hidden":"true"}},[a._v("#")]),a._v(" SpringCloud Bus 自动更新配置")]),a._v(" "),s("h3",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理","aria-hidden":"true"}},[a._v("#")]),a._v(" 原理")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tNc79gy1fq6hygf8dcj31kw0xpan2.jpg",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("准备远端 "),s("code",[a._v("git")]),a._v(" 项目, 用于提供配置资源")]),a._v(" "),s("li",[s("code",[a._v("config-server")]),a._v(" 用于配置的调度,\n"),s("ul",[s("li",[a._v("从远端获取配置内容存储到本地,")]),a._v(" "),s("li",[a._v("从本地获取配置内容")]),a._v(" "),s("li",[a._v("发送配置信息给统一配置的客户端")]),a._v(" "),s("li",[a._v("发送 MQ 消息给客户端, 让客户端调用新的配置文件")])])]),a._v(" "),s("li",[a._v("本地 "),s("code",[a._v("git")]),a._v(" 在没有网络的时候, 用于保证项目正常运行的缓存配置内容")]),a._v(" "),s("li",[a._v("消息队列: 用于配置中心的 "),s("code",[a._v("server")]),a._v(" 端和 "),s("code",[a._v("client")]),a._v(" 端的通讯")])]),a._v(" "),s("h3",{attrs:{id:"编码-测试-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码-测试-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 编码 & 测试")]),a._v(" "),s("h4",{attrs:{id:"config-server-编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config-server-编码","aria-hidden":"true"}},[a._v("#")]),a._v(" Config Server 编码")]),a._v(" "),s("p",[a._v("添加相关 "),s("code",[a._v("jar")])]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-bus-amqp"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--springcloud 2.0 正式版中没有提供 monitor 的相关接口--\x3e")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--ps: 此接口用于 git 的 webhooke 调用, 用于通知 config server 发送消息给客户端,--\x3e")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--以实现配置的自动刷新--\x3e")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-config-monitor"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("添加后启动项目, 会发现 RabbitMQ 中会自动添加一个队列")]),a._v(" "),s("blockquote",[s("p",[a._v("如果 RabbitMQ 有密码, 需要配置相关的密码")])]),a._v(" "),s("p",[a._v("在 "),s("code",[a._v("config server")]),a._v(" 启动类上添加注解 "),s("code",[a._v("@EnableConfigServer")])]),a._v(" "),s("h4",{attrs:{id:"config-client-编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config-client-编码","aria-hidden":"true"}},[a._v("#")]),a._v(" Config Client 编码")]),a._v(" "),s("p",[a._v("添加相关的 "),s("code",[a._v("jar")])]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-bus-amqp"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("不需要添加其他注解")]),a._v(" "),s("h4",{attrs:{id:"刷新配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#刷新配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 刷新配置")]),a._v(" "),s("p",[a._v("访问 "),s("code",[a._v("config")]),a._v(" 的地址 "),s("code",[a._v("/actuator/bus-refresh")]),a._v(" 即可完成刷新.")]),a._v(" "),s("p",[a._v("同时, 如果想要 config 客户端起效果, 还需要在对应的配置文件的类上添加 "),s("code",[a._v("@RefreshScope")]),a._v(" 注解.")]),a._v(" "),s("p",[a._v("例如:")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @author summer\n * @date 2018/4/9 下午6:18\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Data")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Component")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ConfigurationProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"girl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@RefreshScope")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GirlConfig")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" String name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" Integer age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br")])]),s("h4",{attrs:{id:"git-自动刷新配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-自动刷新配置","aria-hidden":"true"}},[a._v("#")]),a._v(" git 自动刷新配置")]),a._v(" "),s("p",[a._v("如果想使用 "),s("code",[a._v("git")]),a._v(" 刷新配置, 则需要用到 "),s("code",[a._v("git")]),a._v(" 的 "),s("code",[a._v("Webhooks")]),a._v(" 功能. SringCloud 提供给 "),s("code",[a._v("git Webhook")]),a._v(" 的地址是 "),s("code",[a._v("/monitor")])]),a._v(" "),s("h1",{attrs:{id:"第七章-消息和异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章-消息和异步","aria-hidden":"true"}},[a._v("#")]),a._v(" 第七章 消息和异步")]),a._v(" "),s("h2",{attrs:{id:"异步和消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步和消息","aria-hidden":"true"}},[a._v("#")]),a._v(" 异步和消息")]),a._v(" "),s("h3",{attrs:{id:"异步的常见形态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步的常见形态","aria-hidden":"true"}},[a._v("#")]),a._v(" 异步的常见形态")]),a._v(" "),s("ul",[s("li",[a._v("通知: 单项请求")]),a._v(" "),s("li",[a._v("请求/异步相应: 客户端调用服务端, 服务端不会立刻相应, 默认相应不会立刻送达")]),a._v(" "),s("li",[a._v("消息: 可实现一对多的模式")])]),a._v(" "),s("h3",{attrs:{id:"mq-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mq-应用场景","aria-hidden":"true"}},[a._v("#")]),a._v(" MQ 应用场景")]),a._v(" "),s("ul",[s("li",[a._v("异步处理")]),a._v(" "),s("li",[a._v("流量削峰")]),a._v(" "),s("li",[a._v("日志处理  代表者 kafka")]),a._v(" "),s("li",[a._v("应用解耦")])]),a._v(" "),s("h2",{attrs:{id:"rabbitmq-的简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-的简单使用","aria-hidden":"true"}},[a._v("#")]),a._v(" RabbitMQ 的简单使用")]),a._v(" "),s("p",[a._v("Rabbit 使用, 此内容会分成专题去讲, 此处就不展开了")]),a._v(" "),s("h2",{attrs:{id:"springcloud-stream-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springcloud-stream-的使用","aria-hidden":"true"}},[a._v("#")]),a._v(" SpringCloud Stream 的使用")]),a._v(" "),s("p",[a._v("添加相关 "),s("code",[a._v("jar")]),a._v(" 文件")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-stream-rabbit"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://ws2.sinaimg.cn/large/006tKfTcgy1fq7j3k5yfej31940uy47e.jpg",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"订单中业务使用-mq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#订单中业务使用-mq","aria-hidden":"true"}},[a._v("#")]),a._v(" 订单中业务使用 MQ")]),a._v(" "),s("p",[a._v("注意点: 发送 MQ 消息时一定不能再可能出现异常的事物过程中发送, 因为多条处理的时候, 可能上面的操作成功了, 这时我们发送了消息, 但是下面的操作又失败了, 这时数据库是不会受到影响的, 但是 消息已经发出了, 就会导致出现数据错误的问题.")]),a._v(" "),s("h2",{attrs:{id:"异步扣库存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步扣库存","aria-hidden":"true"}},[a._v("#")]),a._v(" 异步扣库存")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tNc79gy1fq804yh340j31kw0yc4a9.jpg",alt:""}})]),a._v(" "),s("blockquote",[s("p",[a._v("// TODO")])]),a._v(" "),s("p",[a._v("异步扣库存的分析有必要多看两遍")]),a._v(" "),s("h1",{attrs:{id:"第八章-服务网关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第八章-服务网关","aria-hidden":"true"}},[a._v("#")]),a._v(" 第八章 服务网关")]),a._v(" "),s("h2",{attrs:{id:"服务网关和-zuul"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务网关和-zuul","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务网关和 Zuul")]),a._v(" "),s("h3",{attrs:{id:"为什么需要服务网关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要服务网关","aria-hidden":"true"}},[a._v("#")]),a._v(" 为什么需要服务网关")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tKfTcly1ftjnghv5c8j31kw0v0qgg.jpg",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"服务网观的要素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务网观的要素","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务网观的要素")]),a._v(" "),s("ul",[s("li",[a._v("稳定性, 高可用")]),a._v(" "),s("li",[a._v("性能, 并发性")]),a._v(" "),s("li",[a._v("安全性")]),a._v(" "),s("li",[a._v("扩展性")])]),a._v(" "),s("h3",{attrs:{id:"常见的网关方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的网关方案","aria-hidden":"true"}},[a._v("#")]),a._v(" 常见的网关方案")]),a._v(" "),s("ul",[s("li",[a._v("Nginx + Lua")]),a._v(" "),s("li",[a._v("Kong(收费) 基于 Nginx + Lua")]),a._v(" "),s("li",[a._v("Tyk go语言开发")]),a._v(" "),s("li",[a._v("SpringCloud Zuul 第一代, 性能不占优势")])]),a._v(" "),s("h3",{attrs:{id:"四种过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四种过滤器","aria-hidden":"true"}},[a._v("#")]),a._v(" 四种过滤器")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws1.sinaimg.cn/large/006tNc79gy1fq8nn1ssn5j30r60elgnx.jpg",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"架构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#架构图","aria-hidden":"true"}},[a._v("#")]),a._v(" 架构图")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws2.sinaimg.cn/large/006tNc79gy1fq8no0ss90j30oa0ho7c8.jpg",alt:""}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://ws2.sinaimg.cn/large/006tNc79gy1fq8nolno6gj30rx0hn42i.jpg",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"路由转发-排除和自定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由转发-排除和自定义","aria-hidden":"true"}},[a._v("#")]),a._v(" 路由转发, 排除和自定义")]),a._v(" "),s("h3",{attrs:{id:"创建路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建路由","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建路由")]),a._v(" "),s("p",[a._v("创建项目")]),a._v(" "),s("p",[a._v("加入相关 jar")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-config"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-netflix-eureka-client"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-netflix-zuul"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("编写配置文件")]),a._v(" "),s("div",{staticClass:"language-yml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("spring:\n  application:\n    # 设置请求的文件名称(即当前项目名称)\n    name: api-gateway\n  cloud:\n    config:\n      discovery:\n        # 开启配置\n        enabled: true\n        # 设置配置服务的名称\n        service-id: CONFIG\n\n      # 在此设置环境\n      profile: dev\n\n#因为启动时会先找注册中心, 通过主持中心才能找到 Config , 所以,注册中心的地址需要再本地配置\neureka:\n  client:\n    service-url:\n      defaultZone: http://localhost:8761/eureka\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("p",[a._v("开启路由转发")]),a._v(" "),s("p",[a._v("在 "),s("code",[a._v("Application")]),a._v(" 主类上添加 "),s("code",[a._v("@EnableZuulProxy")]),a._v(" 注解")]),a._v(" "),s("p",[a._v("开启服务, 访问 "),s("code",[a._v("网关地址[:端口] / 服务id / 服务地址")]),a._v(",")]),a._v(" "),s("p",[a._v("例如: "),s("code",[a._v("http://localhost:8120/product/product/list")])]),a._v(" "),s("p",[a._v("一直到端口, 都是网管地址")]),a._v(" "),s("p",[a._v("第一个 "),s("code",[a._v("product")]),a._v(" 是 product 服务的 id")]),a._v(" "),s("p",[a._v("第二个 "),s("code",[a._v("product")]),a._v(" 是路径中的内容")])])}],!1,null,null,null);e.options.__file="SpringCloud 微服务实战课程大纲.md";t.default=e.exports}}]);