(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{220:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"content"},[s._m(0),s._v(" "),s._m(1),s._v(" "),n("p",[s._v("此文档是针对 framework 项目中的各个子模块的功能做简要的说明, 其实现原理和更为详细的介绍, 此文档不做过多的展开. 后续会有针对性的博文介绍.")]),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),s._m(4),s._v(" "),s._m(5),s._v(" "),s._m(6),s._v(" "),n("p",[s._v("此处的公共实体:")]),s._v(" "),s._m(7),s._v(" "),s._m(8),s._v(" "),s._m(9),s._v(" "),n("p",[s._v("例如:")]),s._v(" "),s._m(10),s._m(11),s._v(" "),n("p",[s._v("使用公共实体能提高代码的一致性, 公共实体中还能配置一些全局的公共常量, 有利于代码管理,  在一定程度上还能使业务代码更加简洁. 还能避免序列化遗漏的问题.")]),s._v(" "),s._m(12),s._v(" "),s._m(13),s._v(" "),n("p",[s._v("公共 Mapper(BaseMapper): 配合数据库查询的公共查询方法.")]),s._v(" "),s._m(14),s._v(" "),s._m(15),s._m(16),s._v(" "),s._m(17),s._v(" "),s._m(18),s._v(" "),n("p",[s._v("例如:")]),s._v(" "),s._m(19),n("p",[s._v("PS: BaseMapper 只是定义了相关的接口, 具体的查询并没有做, 所以要想让查询起作用, 还需要自己写 XML 实现对应接口的 sql 查询")]),s._v(" "),s._m(20),s._v(" "),n("p",[s._v("开始设计此框架的时, 最先想到的是 SpringBoot JPA , 但是因为团队的技术倾向, 再加上 JPA 对关联查询不是那么友好, 所以没有采用此方案.(主要原因是团队的技术倾向)")]),s._v(" "),n("p",[s._v("但是 MyBatis 的 XML 确实比 JPA 的开发成本要高, 所以后来考虑加入 MyBatis-Plus 来解决这个问题. 但因 MyBatis-Plus 的设计思路和本项目的结构有较大的出入, 同时 MyBatis-Plus 开放了过于宽泛的数据修改方式, 会带来项目结构管理的困难. 所以此项目中不采用此方式.")]),s._v(" "),n("p",[s._v("虽然不使用  MyBatis-Plus 框架作为数据库的操作框架, 但还是吸取了其框架中优秀的部分, 例如: 代码的自动生成, 这样也避免了花太多时间在 XML 的配置上.")]),s._v(" "),s._m(21),s._v(" "),s._m(22),s._v(" "),s._m(23),s._v(" "),s._m(24),s._v(" "),s._m(25),s._m(26),s._v(" "),s._m(27),s._v(" "),s._m(28),s._v(" "),n("p",[s._v("例如:")]),s._v(" "),s._m(29),s._m(30),s._v(" "),n("p",[s._v("这里引发我思考的并不是当前 Service 实现的功能, 而是博主对缓存的思考. 当然, 我们可以开启 MyBatis 的二级缓存, 并结合 Radis 实现缓存的分布式共享, 但 MyBatis 的二级缓存的设计逻辑有些不足(详情请看 [redis 缓存](#redis 缓存) ), 所以本项目采取的方式是 SpringBoot 的 RedisCacheManager 的缓存机制.")]),s._v(" "),n("p",[s._v("因为 Mapper 对象定义的是接口, 而 RedisCacheManager 不推荐将缓存的放到接口上, 所以我们把缓存的注解操作放到 Service 层的实现上.")]),s._v(" "),s._m(31),s._v(" "),s._m(32),s._v(" "),s._m(33),s._v(" "),n("p",[s._v("在上面的 Service 示例中已经有 PageHelp 的使用代码了. 当然, 上面的使用只是其使用方式的一种, 更多方法请查看 "),n("a",{attrs:{href:"https://github.com/abel533/MyBatis-Spring-Boot",target:"_blank",rel:"noopener noreferrer"}},[s._v("PageHelper Git"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("此文档只对上面 Service 中的使用, 做简单的解释")]),s._v(" "),s._m(34),n("p",[s._v("只需要做这样简单的操作, 即可实现分页.")]),s._v(" "),s._m(35),s._v(" "),s._m(36),s._v(" "),s._m(37),s._v(" "),s._m(38),s._v(" "),s._m(39),s._v(" "),s._m(40),s._v(" "),s._m(41),s._v(" "),s._m(42),s._v(" "),s._m(43),s._v(" "),s._m(44)])},[function(){var s=this.$createElement,t=this._self._c||s;return t("h1",{attrs:{id:"framework-功能说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#framework-功能说明","aria-hidden":"true"}},[this._v("#")]),this._v(" Framework 功能说明")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 简介")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"framework-base"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#framework-base","aria-hidden":"true"}},[this._v("#")]),this._v(" framework-base")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"公共实体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共实体","aria-hidden":"true"}},[this._v("#")]),this._v(" 公共实体")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"概念说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念说明","aria-hidden":"true"}},[this._v("#")]),this._v(" 概念说明")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("公共属性(BaseModel): 实体类中普遍存在的操作, 例如实现 "),t("code",[this._v("Serializable")]),this._v(" 接口, 有 "),t("code",[this._v("id")]),this._v(" "),t("code",[this._v("createTime")]),this._v("  等普遍是用的字段.")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"本项目实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本项目实现","aria-hidden":"true"}},[this._v("#")]),this._v(" 本项目实现")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ol",[n("li",[n("p",[s._v("实现了 "),n("code",[s._v("Serializable")]),s._v(" 接口")])]),s._v(" "),n("li",[n("p",[s._v("加入了 "),n("code",[s._v("id")]),s._v(" "),n("code",[s._v("createTime")]),s._v(" "),n("code",[s._v("updateTime")]),s._v(" "),n("code",[s._v("isDeleted")]),s._v(" 这 4 个公共字段")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** id 主键[Long] */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Long id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[s._v("主键采用的是 Long 类型, 并采用 Twitter 的 Snowflake 生成策略自动生成, 详情请看 "),n("a",{attrs:{href:"#UID"}},[s._v("UID")])]),s._v(" "),n("p",[s._v("此处之所以使用 Long 类型的主键, 而不是使用 UUID 生成策略生成的 String 类型的主键, 主要是有如下几个方面的考虑")]),s._v(" "),n("ol",[n("li",[s._v("索引效率: Long 类型的索引速度更快")]),s._v(" "),n("li",[s._v("存储空间消耗: Long 类型的索引, 在存储的时候占用更小的存储空间, 同时其索引所占的存储空间也会很小, 所以 Long 类型的 Id 在存储空间上有更多的优势")])])]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 数据创建时间(添加时自动填充系统时间)[Date] */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Date createTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[s._v("此字段不需要自己设定, 在使用 mysql(5.6+) 数据库时,选择 timestamp 数据类型")]),s._v(" "),n("p",[s._v("Default Value 设置为 CURRENT_TIMESTAMP, 即可在添加的时候自动设置 createTime 为当前系统时间")])]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 数据更新时间(添加时自动填充系统时间,更新时自动更新)[Date] */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Date updateTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[s._v("此字段不需要自己设定, 在使用 mysql(5.6+) 数据库时,选择 timestamp 数据类型")]),s._v(" "),n("p",[s._v("Default Value 设置为 CURRENT_TIMESTAMP, 即可在添加的时候, 自动设置 updateTime 为当前系统时间")]),s._v(" "),n("p",[s._v("Expression 设置为 ON UPDATE CURRENT_TIMESTAMP, 即可在更新数据的时候, 自动更新 updateTime 为系统时间")])]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** 伪删除标记字段(false(0): 未删除, true(1): 已删除)[Boolean] */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Boolean isDeleted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[n("code",[s._v("isDeleted")]),s._v(" 字段为伪删除字段, 其数据类型为 "),n("code",[s._v("Boolean")]),s._v(", "),n("code",[s._v("true")]),s._v(" 的时候表示 "),n("strong",[s._v("已删除")]),s._v(", "),n("code",[s._v("false")]),s._v(" 的时候表示 "),n("strong",[s._v("未删除")]),s._v(",")]),s._v(" "),n("p",[s._v("在业务中操执行删除操作的时候, 并不会真的删除对应的数据, 而只是把 "),n("code",[s._v("isDeleted")]),s._v(" 标记为 "),n("code",[s._v("true")])]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("注: 这样操作有问题存在, 比如: 限定用户表中的 "),n("code",[s._v("username")]),s._v(" 是不能重复的, 而 "),n("code",[s._v("username")]),s._v(" 为 "),n("code",[s._v("admin")]),s._v(" 的用户被标记为删除了, 这时再注册 "),n("code",[s._v("username")]),s._v(" 为 "),n("code",[s._v("admin")]),s._v(" 的用户时就会有问题. 所以从这个角度说, 博主是不建议使用 "),n("strong",[s._v("伪删除")]),s._v(" 的方式保留历史中无效数据的.")]),s._v(" "),n("p",[s._v("同时, 使用伪删除的方式会占用活跃度较高的存储空间,并且会增加查询的数据过滤量. 所以博主更倾向使用数据迁移的方式, 把想要删除的数据备份到专用的备份库中, 业务库中使用正常的删除.")])])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"使用方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用方式")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("使用时直接继承 "),t("code",[this._v("BaseModel")]),this._v(" 即可")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author summer\n * @date 2018-01-01\n * @description 用户表 实体类\n */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseModel")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"思考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思考","aria-hidden":"true"}},[this._v("#")]),this._v(" 思考")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"公共-mapper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共-mapper","aria-hidden":"true"}},[this._v("#")]),this._v(" 公共 Mapper")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"概念说明-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念说明-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 概念说明")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"本项目实现-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本项目实现-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 本项目实现")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author summer\n * @date 2017/12/29 上午9:44\n * 公共的 Dao 接口\n */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseMapper")]),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 插入数据\n     * @param entity 插入的数据对象\n     * @return Integer 影响的数据条数\n     */")]),s._v("\n    Integer "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 根据 id 删除数据 (此处的删除为伪删除,只是修改 id_deleted 为 true(1))\n     * @param id 需要删除的数据的 id\n     * @return Integer 影响的数据条数\n     */")]),s._v("\n    Integer "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Long id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 根据传入的对象的条件删除数据--选择性拼接(如果有值则加入拼接,否则不加入)\n     * (此处的删除为伪删除,只是修改 id_deleted 为 true(1))\n     * @param entity 需要删除的数据条件\n     * @return Integer 影响的数据条数\n     */")]),s._v("\n    Integer "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("deleteSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 根据传入的对象, 更新对应的数据\n     * @param entity 修改的数据对象\n     * @return Integer 影响的数据条数\n     */")]),s._v("\n    Integer "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 根据传入的对象, 更新对应的数据--选择性修改(如果有值则加入拼接,否则不加入)\n     * @param entity 修改的数据对象\n     * @return Integer 影响的数据条数\n     */")]),s._v("\n    Integer "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 根据 id 获取数据对象\n     * @param id 想要查询的数据的 id\n     * @return 符合条件的对象\n     */")]),s._v("\n    T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Long id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 根据传入的对象, 查询符合条件的数据\n     * @param entity 用于封装查询条件的实体类\n     * @return 符合条件的数据集合\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseModel")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByParameters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 根据传入的对象, 查询符合条件的数据的集合\n     * @param entity 用于封装查询条件的实体类\n     * @return 符合条件的数据集合\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseModel")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" List"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"使用方式-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方式-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用方式")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("直接继承 "),t("code",[this._v("BaseMapper")]),this._v(" 即可.")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("注意: 在继承的时候需要传入"),t("strong",[this._v("泛型")]),this._v("(当前 mapper 对应的实体对象)")])])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserMapper")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseMapper")]),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"思考-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思考-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 思考")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"公共-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#公共-service","aria-hidden":"true"}},[this._v("#")]),this._v(" 公共 Service")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"概念说明-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念说明-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 概念说明")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("公共 Service(BaseService): 定义并实现了常用的 service 操作, 例如:"),t("code",[this._v("insert")]),this._v(" "),t("code",[this._v("update")]),this._v(" 等")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"本项目实现-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本项目实现-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 本项目实现")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author summer\n * @date 2017/12/29 上午10:46\n * Service 的基类\n */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseServiceImpl")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("M "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseMapper")]),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseModel")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseService")]),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" M mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/29 上午11:54\n     * @param entity 需要保存的数据对象\n     * @return java.lang.Integer\n     * @description 用于保存数据的方法, 如果 id 为空则执行添加操作, 否则执行修改操作\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertOrUpdateSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数合法性校验, 如果传入的对象为空, 则直接返回 0, 表示没有执行")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n         * 根据传入的对象是否有 id 来选择执行添加操作还是修改操作\n         * 如果有 id, 说明这是已有数据, 则执行添加操作, 否则执行修改操作\n         */")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("StringUtils"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建全局唯一 id 生成器对象, 用于生成 long 类型的 id")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意; 此处的 数据中心和机器的 id 均设置成了 0")]),s._v("\n            Snowflake snowflake "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Snowflake")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置 id")]),s._v("\n            entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("snowflake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2018/1/13 下午4:19\n     * @param entity 需要保存的数据对象\n     * @return T\n     * @description 用于新建(插入)数据的方法\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建全局唯一 id 生成器对象, 用于生成 long 类型的 id")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意; 此处的 数据中心和机器的 id 均设置成了 0")]),s._v("\n        Snowflake snowflake "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Snowflake")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置 id")]),s._v("\n        entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("snowflake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/29 下午3:05\n     * @param id 将要删除(伪删除) 的数据的 id\n     * @return java.lang.Integer\n     * @description 根据数据的 id 删除(伪删除)数据的方法\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" Integer "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Long id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数合法性校验")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/29 下午3:05\n     * @param entity 将要删除(伪删除) 的数据的 条件对象\n     * @return java.lang.Integer\n     * @description 根据数据的条件对象删除(伪删除)数据的方法\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" Integer "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("deleteSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数合法性校验")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("deleteSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2018/1/13 下午4:21\n     * @param entity 需要保存的数据对象\n     * @return T\n     * @description 用于更新数据的方法\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/31 下午2:49\n     * @param entity 需要修改的数据对象\n     * @return T\n     * @description 根据传入的数据对象, 进行动态的拼接修改语句,如果有值则进行修改,否则直接忽略此字段\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数合法性校验, 如果传入的对象为空, 则直接返回 0, 表示没有执行")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("updateSelective")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/29 下午3:09\n     * @param id 数据的 id\n     * @return T\n     * @description 根据 id 查询对应的对象\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Long id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数合法性校验")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/29 下午3:21\n     * @param entity 用于封装查询条件的实体\n     * @return T\n     * @description 根据传入的实体对象条件, 查询出符合条件的数据\n     * 注意: 使用此方法获取唯一对象有风险\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" T "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByParameters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数合法性校验")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByParameters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/29 下午3:17\n     * @param entity 用于封装查询条件的实体\n     * @return java.util.List<T>\n     * @description 根据传入的实体对象条件, 查询出符合条件的数据的集合\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" List"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数合法性校验")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @author summer\n     * @date 2017/12/29 下午3:43\n     * @param entity 用于封装条件的实体类\n     * @param pageNum 页码\n     * @param pageSize 每页显示的数据量\n     * @return com.github.pagehelper.Page<T>\n     * @description 根据传入的实体条件 / 页码 / 每页显示的数据量\n     * 查询出符合条件的分页对象\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" Page"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findPage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Integer pageNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Integer pageSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        Page"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" page "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" PageHelper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("startPage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pageNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" page"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/**\n     * @author summer\n     * @date 2017/12/29 下午3:43\n     * @param entity 用于封装条件的实体类\n     * @param pageNum 页码\n     * @param pageSize 每页显示的数据量\n     * @param orderBy 排序方式 例如: "update_time desc"\n     * @return com.github.pagehelper.Page<T>\n     * @description 根据传入的实体条件 / 页码 / 每页显示的数据量\n     * 查询出符合条件的分页对象\n     */')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" Page"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findPage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Integer pageNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Integer pageSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" String orderBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        Page"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" page "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" PageHelper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("startPage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pageNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" orderBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" page"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("228")]),n("br"),n("span",{staticClass:"line-number"},[s._v("229")]),n("br"),n("span",{staticClass:"line-number"},[s._v("230")]),n("br"),n("span",{staticClass:"line-number"},[s._v("231")]),n("br"),n("span",{staticClass:"line-number"},[s._v("232")]),n("br"),n("span",{staticClass:"line-number"},[s._v("233")]),n("br"),n("span",{staticClass:"line-number"},[s._v("234")]),n("br"),n("span",{staticClass:"line-number"},[s._v("235")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"使用方式-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方式-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用方式")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("在接口中继承 "),t("code",[this._v("BaseService")]),this._v(" 在实现中继承 "),t("code",[this._v("BaseServiceImpl")]),this._v(" , 当然, 也可以只在实现中继承 "),t("code",[this._v("BaseServiceImpl")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("注意: 在接口继承的时候需要传入"),t("strong",[this._v("泛型")]),this._v(" (当前 Service 对应的实体)")]),this._v(" "),t("p",[this._v("在实现类继承的时候需要传入"),t("strong",[this._v("泛型")]),this._v(" <当前 Service 对应的 Mapper, 当前 Service 对应的实体>")])])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接口的继承")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserService")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseService")]),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实现类的继承")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserServiceImpl")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseServiceImpl")]),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("UserMapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserService")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"思考-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思考-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 思考")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("p",[s._v("多说一句, 使用缓存时一定要慎重, 因为这不仅关系到  "),n("strong",[s._v("缓存穿透")]),s._v(" "),n("strong",[s._v("缓存失效")]),s._v(" "),n("strong",[s._v("数据脏读")]),s._v("  还关系到 "),n("strong",[s._v("缓存并发")]),s._v(". 对缓存的更多思考, 我会在之后写专门的文章讨论.")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"分页查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分页查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 分页查询")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("分页查询使用的是开源插件 "),t("code",[this._v("com.github.pagehelper:pagehelper-spring-boot-starter")]),this._v(" , 在此对本项目的作者"),t("strong",[this._v("Liuzh")]),this._v("表示由衷的感谢.")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 开启 PageHelper , 并设置页码和每页显示的数据条数\n */")]),s._v("\nPage"),n("span",{pre:!0,attrs:{class:"token generics function"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" page "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" PageHelper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("startPage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pageNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pageSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 紧跟一条查询\n * 注意: 查询和上面的 PageHelper 之间不要有其他代码\n */")]),s._v("\nmapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("entity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"uid-生成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uid-生成","aria-hidden":"true"}},[this._v("#")]),this._v(" UID 生成")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"framework-common"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#framework-common","aria-hidden":"true"}},[this._v("#")]),this._v(" framework-common")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"统一返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#统一返回值","aria-hidden":"true"}},[this._v("#")]),this._v(" 统一返回值")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"统一异常处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#统一异常处理","aria-hidden":"true"}},[this._v("#")]),this._v(" 统一异常处理")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#日志","aria-hidden":"true"}},[this._v("#")]),this._v(" 日志")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"文件上传"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件上传","aria-hidden":"true"}},[this._v("#")]),this._v(" 文件上传")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"邮件发送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#邮件发送","aria-hidden":"true"}},[this._v("#")]),this._v(" 邮件发送")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"短信发送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#短信发送","aria-hidden":"true"}},[this._v("#")]),this._v(" 短信发送")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"redis-缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" redis 缓存")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"rabbit-消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rabbit-消息","aria-hidden":"true"}},[this._v("#")]),this._v(" rabbit 消息")])}],!1,null,null,null);e.options.__file="framwork 功能说明.md";t.default=e.exports}}]);